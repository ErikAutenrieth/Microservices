version: '3'

services:
  client:
    image: registry.gitlab.com/ooka2/preparations/monorepo/client
    ports:
      - 80:80
    depends_on:
      - anchor-service

  anchor-service:
    image: registry.gitlab.com/ooka2/preparations/monorepo/anchor-service
    expose:
      - 3000
    ports:
      - 3000:3000
    environment:
      - MONGODB_ATLAS_AZURE_CONNECTION_KEY=mongodb://root:example@mongodb:27017/
      - production=true
    depends_on:
      - mongodb
      - engine-service
      - cooling-exhaust-service
      - control-transmission-service
      - auxiliary-mounting-service

  gateway-service:
    image: registry.gitlab.com/ooka2/preparations/monorepo/gateway-service
    expose:
      - 3060
    ports:
      - 3060:3060
    environment:
      - MONGODB_ATLAS_AZURE_CONNECTION_KEY=mongodb://root:example@mongodb:27017/
    depends_on:
      - mongodb


### Microservices

  auxiliary-mounting-service:
    image: registry.gitlab.com/ooka2/preparations/monorepo/auxiliary-mounting-service
    expose:
      - 3030
    ports:
      - 3030:3030
    environment:
      - MONGODB_ATLAS_AZURE_CONNECTION_KEY=mongodb://root:example@mongodb:27017/
    depends_on:
      - mongodb

  control-transmission-service:
    image: registry.gitlab.com/ooka2/preparations/monorepo/control-transmission-service
    expose:
      - 3040
    ports:
      - 3040:3040
    environment:
      - MONGODB_ATLAS_AZURE_CONNECTION_KEY=mongodb://root:example@mongodb:27017/
    depends_on:
      - mongodb

  cooling-exhaust-service:
    image: registry.gitlab.com/ooka2/preparations/monorepo/cooling-exhaust-service
    expose:
      - 3020
    ports:
      - 3020:3020
    environment:
      - MONGODB_ATLAS_AZURE_CONNECTION_KEY=mongodb://root:example@mongodb:27017/
    depends_on:
      - mongodb

  engine-service:
    image: registry.gitlab.com/ooka2/preparations/monorepo/engine-service
    expose:
      - 3010
    ports:
      - 3010:3010
    environment:
      - MONGODB_ATLAS_AZURE_CONNECTION_KEY=mongodb://root:example@mongodb:27017/
    depends_on:
      - mongodb


### Database

  mongodb:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    volumes:
      - "mongodb_data:/data/db"
    expose:
      - 27017


### Kafka 

  kafka_b:
    image: bitnami/kafka:latest
    hostname: kafka_b
    ports:
      - "9092:9092"
      - "9094:9094"
    volumes:
      - "kafka_data:/bitnami"
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092,EXTERNAL://kafka_b:9094
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@127.0.0.1:9093
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
      - BITNAMI_DEBUG=yes
      - KAFKA_CFG_NUM_PARTITIONS=2

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8888:8080
    environment:
      DYNAMIC_CONFIG_ENABLED: 'true'
      LOGGING_LEVEL_ROOT: 'DEBUG'
    volumes:
      - ./kafka-ui-config.yml:/etc/kafkaui/dynamic_config.yaml:rw


volumes:
  kafka_data:
    driver: local

  mongodb_data:
    driver: local